// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getExpressions parses expressions from code 1`] = `
Array [
  Object {
    "code": "await page.click(\\"a\\");",
    "endLine": 1,
    "startLine": 1,
    "variableNames": Array [],
  },
]
`;

exports[`getExpressions parses expressions from code 2`] = `
Array [
  Object {
    "code": "await page.click(
  '[placeholder=\\"Search by location..\\"]'
);",
    "endLine": 5,
    "startLine": 3,
    "variableNames": Array [],
  },
  Object {
    "code": "await page.fill('[placeholder=\\"Search by location..\\"]', \\"Lakeside Village\\");",
    "endLine": 6,
    "startLine": 6,
    "variableNames": Array [],
  },
  Object {
    "code": "await page.click(\\"a\\");",
    "endLine": 7,
    "startLine": 7,
    "variableNames": Array [],
  },
  Object {
    "code": "// comment about function
function myFunction() {
  const myInnerConst = \\"hi\\";
  console.log(\\"SUP\\"!);
}",
    "endLine": 13,
    "startLine": 9,
    "variableNames": Array [],
  },
  Object {
    "code": "myFunction();",
    "endLine": 15,
    "startLine": 15,
    "variableNames": Array [],
  },
  Object {
    "code": "await myFunction();",
    "endLine": 17,
    "startLine": 17,
    "variableNames": Array [],
  },
  Object {
    "code": "var myVar = \\"hello\\";",
    "endLine": 19,
    "startLine": 19,
    "variableNames": Array [
      "myVar",
    ],
  },
  Object {
    "code": "const myConst =  \\"world\\";",
    "endLine": 20,
    "startLine": 20,
    "variableNames": Array [
      "myConst",
    ],
  },
  Object {
    "code": "let myLet = \\"!\\";",
    "endLine": 21,
    "startLine": 21,
    "variableNames": Array [
      "myLet",
    ],
  },
  Object {
    "code": "myLet = \\"!!\\";",
    "endLine": 22,
    "startLine": 22,
    "variableNames": Array [
      "myLet",
    ],
  },
]
`;

exports[`getExpressions parses expressions from code 3`] = `
Array [
  Object {
    "code": "const todo = \\"hi there!\\";",
    "endLine": 1,
    "startLine": 1,
    "variableNames": Array [
      "todo",
    ],
  },
  Object {
    "code": "await page.goto('http://todomvc.com/examples/react');",
    "endLine": 2,
    "startLine": 2,
    "variableNames": Array [],
  },
  Object {
    "code": "// enter new todo
await page.click(\\".new-todo\\");",
    "endLine": 5,
    "startLine": 4,
    "variableNames": Array [],
  },
  Object {
    "code": "await page.fill(\\".new-todo\\", todo);",
    "endLine": 7,
    "startLine": 7,
    "variableNames": Array [],
  },
  Object {
    "code": "await page.press(\\".new-todo\\", \\"Enter\\");",
    "endLine": 8,
    "startLine": 8,
    "variableNames": Array [],
  },
  Object {
    "code": "// complete todo
await page.click(
    \\".toggle\\"
);",
    "endLine": 13,
    "startLine": 10,
    "variableNames": Array [],
  },
  Object {
    "code": "// clear completed
await page.click(\\".clear-completed\\");",
    "endLine": 16,
    "startLine": 15,
    "variableNames": Array [],
  },
]
`;

exports[`transformCode includes helpers if specified 1`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };
function assertWelcomeText(page) {
  return assertText(page, \\"Welcome!\\");
}
var { page  } = variables;
if (!vmLineStarted(1)) return;
await page.click(\\"a\\");
};

module.exports = qawolfTest;
"
`;

exports[`transformCode includes helpers if specified 2`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };
function assertWelcomeText(page) {
  return assertText(page, \\"Welcome!\\");
}
var {   } = variables;
if (!vmLineStarted(13)) return;
// complete todo
await page.click(
    \\".toggle\\"
);
if (!vmLineStarted(16)) return;
// clear completed
await page.click(\\".clear-completed\\");
};

module.exports = qawolfTest;
"
`;

exports[`transformCode takes start and end lines into account 1`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var { page  } = variables;
if (!vmLineStarted(1)) return;
await page.click(\\"a\\");
};

module.exports = qawolfTest;
"
`;

exports[`transformCode takes start and end lines into account 2`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var { page, x, y, z  } = variables;
if (!vmLineStarted(5)) return;
await page.click(
  '[placeholder=\\"Search by location..\\"]'
);
};

module.exports = qawolfTest;
"
`;

exports[`transformCode takes start and end lines into account 3`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var { page, x, y, z  } = variables;
if (!vmLineStarted(5)) return;
await page.click(
  '[placeholder=\\"Search by location..\\"]'
);
if (!vmLineStarted(6)) return;
await page.fill('[placeholder=\\"Search by location..\\"]', \\"Lakeside Village\\");
if (!vmLineStarted(7)) return;
await page.click(\\"a\\");
if (!vmLineStarted(13)) return;
// comment about function
function myFunction() {
  const myInnerConst = \\"hi\\";
  console.log(\\"SUP\\"!);
}
};

module.exports = qawolfTest;
"
`;

exports[`transformCode takes start and end lines into account 4`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var {   } = variables;
if (!vmLineStarted(1)) return;
var todo = \\"hi there!\\";
variables[\\"todo\\"] = todo;
if (!vmLineStarted(2)) return;
await page.goto('http://todomvc.com/examples/react');
if (!vmLineStarted(5)) return;
// enter new todo
await page.click(\\".new-todo\\");
};

module.exports = qawolfTest;
"
`;

exports[`transformCode takes start and end lines into account 5`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var {   } = variables;
if (!vmLineStarted(7)) return;
await page.fill(\\".new-todo\\", todo);
if (!vmLineStarted(8)) return;
await page.press(\\".new-todo\\", \\"Enter\\");
};

module.exports = qawolfTest;
"
`;

exports[`transformCode takes start and end lines into account 6`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var {   } = variables;
if (!vmLineStarted(13)) return;
// complete todo
await page.click(
    \\".toggle\\"
);
if (!vmLineStarted(16)) return;
// clear completed
await page.click(\\".clear-completed\\");
};

module.exports = qawolfTest;
"
`;

exports[`transformCode transforms web editor code 1`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var { page  } = variables;
if (!vmLineStarted(1)) return;
await page.click(\\"a\\");
};

module.exports = qawolfTest;
"
`;

exports[`transformCode transforms web editor code 2`] = `
"
async function qawolfTest(variables, { vmEnv, vmLineStarted }) {
process.env = { ...process.env, ...vmEnv };

var { page, x, y, z  } = variables;
if (!vmLineStarted(5)) return;
await page.click(
  '[placeholder=\\"Search by location..\\"]'
);
if (!vmLineStarted(6)) return;
await page.fill('[placeholder=\\"Search by location..\\"]', \\"Lakeside Village\\");
if (!vmLineStarted(7)) return;
await page.click(\\"a\\");
if (!vmLineStarted(13)) return;
// comment about function
function myFunction() {
  const myInnerConst = \\"hi\\";
  console.log(\\"SUP\\"!);
}
if (!vmLineStarted(15)) return;
myFunction();
if (!vmLineStarted(17)) return;
await myFunction();
if (!vmLineStarted(19)) return;
var myVar = \\"hello\\";
variables[\\"myVar\\"] = myVar;
if (!vmLineStarted(20)) return;
var myConst =  \\"world\\";
variables[\\"myConst\\"] = myConst;
if (!vmLineStarted(21)) return;
var myLet = \\"!\\";
variables[\\"myLet\\"] = myLet;
if (!vmLineStarted(22)) return;
myLet = \\"!!\\";
variables[\\"myLet\\"] = myLet;
};

module.exports = qawolfTest;
"
`;
